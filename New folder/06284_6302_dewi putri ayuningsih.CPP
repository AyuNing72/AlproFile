//======================
// latihan program Tree
// Pre-Order
//In-Order
//Post-Order
//======================

//Nama :Dewi Putri Ayuningsih
//Nim	 :A12.2019.06284

#include <stdio.h>
#include <conio.h>
#include <iostream.h>struct Node{	int data;   Node *kiri;   Node *kanan;};void tambah(Node **root,int databaru){	if((*root)== NULL){   					Node *baru;                  baru=new Node;                  baru->data=databaru;                  baru->kiri=NULL;                  baru->kanan=NULL;                  (*root)=baru;                  (*root)->kiri=NULL;                  (*root)->kanan=NULL;                  printf("Data Bertambah!");   		}         else if(databaru<(*root)->data)         			tambah(&(*root)->kiri,databaru);         else if(databaru>(*root)->data)         			tambah(&(*root)->kanan,databaru);         else if(databaru==(*root)->data)         			printf("Data sudah ada!");}void preOrder(Node *root){	if(root !=NULL){   			printf("%d",root->data);            preOrder(root->kiri);            preOrder(root->kanan);   }}void inOrder(Node *root){	if(root !=NULL){   			inOrder(root->kiri);            printf("%d",root->data);            inOrder(root->kanan);   }}void postOrder(Node *root){	if(root !=NULL){   			postOrder(root->kiri);            postOrder(root->kanan);            printf("%d",root->data);   }}void main(){			int pil,c;         Node *pohon,*t;         pohon=NULL;         do{         		clrscr();               int data;               cout<<"MENU\n";               cout<<"1.Tambah\n";               cout<<"2.liat Pre-Order\n";               cout<<"3.liat In-Order\n";               cout<<"4.liat Post-Order\n";               cout<<"5.Exit\n";               cout<<"Masukkan Pilihan: ";               cin>>pil;               switch(pil){               			case 1: cout<<"Data Baru : ";                        			cin>>data;                                 tambah(&pohon,data);                                 break;                        case 2:                        			if(pohon!=NULL)                                 preOrder(pohon);                        else                        			cout<<"Masih Kosong!";                                 break;                        case 3:                        			if(pohon!=NULL)                                 inOrder(pohon);                        else                        			cout<<"Masih Kosong!";                                 break;                        case 4:                        			if(pohon!=NULL)                                 postOrder(pohon);                                 else                                 cout<<"Masih Kosong!";                                 break;               }               getch();         }while(pil!=5);}